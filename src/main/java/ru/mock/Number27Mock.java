package ru.mock;

import java.util.HashSet;
import java.util.Set;

/**
 * –ó–∞–¥–∞—á–∞:
 * –î–∞–Ω–æ –∫–æ—Ä–Ω–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ä–Ω—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ø–æ–∏—Å–∫–∞ (BST) –∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ùëò.
 * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Ä–Ω—É—Ç—å true, –µ—Å–ª–∏ –≤ BST —Å—É—â–µ—Å—Ç–≤—É—é—Ç –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞, —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞
 * ùëò, –∏–Ω–∞—á–µ –≤–µ—Ä–Ω—É—Ç—å false.
 * –ü—Ä–∏–º–µ—Ä 1:
 * –í—Ö–æ–¥: –∫–æ—Ä–µ–Ω—å = [5,3,6,2,4,null,7], ùëò=9
 * –í—ã—Ö–æ–¥: true
 * –ü—Ä–∏–º–µ—Ä 2:
 * –í—Ö–æ–¥: –∫–æ—Ä–µ–Ω—å = [5,3,6,2,4,null,7], ùëò=28
 * –í—ã—Ö–æ–¥: false
 * –£—Å–ª–æ–≤–∏—è:
 * –ö–æ—Ä–µ–Ω—å BST - –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–µ—Ä–µ–≤–æ.
 */
public class Number27Mock {
        public static boolean findTarget(TreeNode root, int k) {
            Set<Integer> saverOperand = new HashSet<>();
            return find(root, k, saverOperand);
        }

        private static boolean find(TreeNode node, int k, Set<Integer> set) {
            if (node == null) {
                return false;
            }
            if (set.contains(k - node.val)) {
                return true;
            }
            set.add(node.val);
            return find(node.left, k, set) || find(node.right, k, set);
        }
    }


/*
  1. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ö—ç—à-—Å–µ—Ç (`set`) –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —É–∑–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –±—ã–ª–∏ –ø–æ—Å–µ—â–µ–Ω—ã.
  2. –í –º–µ—Ç–æ–¥–µ `find` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ \( k - node.val \) –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ. –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç,
  —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è `true`.
  3. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ.
  4. –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ –¥–ª—è –ª–µ–≤–æ–≥–æ –∏ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤—å–µ–≤.
  5. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ–±–æ–∏—Ö –ø–æ–¥–¥–µ—Ä–µ–≤—å—è—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è `false`.
  –¢–∞–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, –ø–æ—Å–∫–æ–ª—å–∫—É –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Ä–µ–º—è \( O(n) \) –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ \( O(n) \)
  –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ö—ç—à-—Å–µ—Ç–µ.
 */







